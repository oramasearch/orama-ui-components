/*
!IMPORTANT: Make sure to also run 'pnpm convert-scss-to-js' if you make changes to this file to make sure the changes are reflected in storybook as well
TODO: We'll make this task automatic in the future
*/

@use 'sass:color';
@use 'sass:map';

/**
* * PRIMITIVE COLORS
*/
$gray50: #fbfbfb;
$gray100: #efefef;
$gray200: #dadada;
$gray300: #c6c6c6;
$gray400: #afafb1;
$gray500: #99989d;
$gray600: #838289;
$gray700: #2e2e2e;
$gray800: #212121;
$gray900: #151515;
$gray950: #050505;
$purple100: #f7f6f9;
$purple200: #eee9f6;
$purple300: #ae8ff7;
$purple500: #8152ee;
$purple600: #6a4bb2;
$purple700: #432d77;

/**
* * SEMANTIC COLOR MAP FOR LIGHT THEME
* in order to use one of the colors included in the palette map;
*  use the functions text-color(key), background-color(key), border-color(key)
* ie: text-color('primary')
* These color functions should be used to:
*  - define a fallback color for a CSS custom property
*  - for a specific element, we want to use the same color regardless of the color scheme
*/
$semanticColors: (
  text: (
    primary: $gray900,
    secondary: $gray600,
    tertiary: $gray500,
    accent: $purple300,
    inactive: $gray500,
    reverse: white,
  ),
  background: (
    primary: $gray50,
    secondary: white,
    tertiary: $purple200,
    fourth: $gray100,
    reverse: black,
    accent: $purple700,
  ),
  border: (
    primary: $gray200,
    secondary: $gray100,
    tertiary: $gray900,
    accent: $purple700,
  ),
  icon: (
    primary: $gray900,
    secondary: $gray200,
    tertiary: $gray600,
    inactive: $gray500,
    reverse: $gray50,
  ),
  shadow: (
    primary: white,
  ),
);

$elementColors: (
  'button-text': (
    primary: icon-color('reverse', $semanticColors),
    secondary: text-color('secondary', $semanticColors),
  ),
  'button-background': (
    primary: background-color('accent', $semanticColors),
    secondary: background-color('secondary', $semanticColors),
    'secondary-hover': background-color('tertiary', $semanticColors),
  ),
  'button-border': (
    secondary: border-color('primary', $semanticColors),
  ),
  'backdrop-background': (
    primary: color.adjust(background-color('primary', $semanticColors), $alpha: -0.3),
  ),
  'chat-button-border': (
    gradientOne: transparent,
    gradientTwo: transparent,
    gradientThree: border-color('accent', $semanticColors),
    gradientFour: border-color('accent', $semanticColors),
    gradientFive: transparent,
    gradientSix: transparent,
  ),
  'chat-button-background': (
    gradientOne: background-color('accent', $semanticColors),
    gradientTwo: transparent,
  ),
);

/**
* * SEMANTIC AND ELEMENT COLOR MAP FOR DARK THEME
*/
$semanticColorsDark: (
  text: (
    primary: $gray50,
    secondary: $gray200,
    tertiary: $gray600,
    accent: $purple300,
    inactive: $gray500,
    reverse: black,
  ),
  background: (
    primary: $gray950,
    secondary: $gray900,
    tertiary: $gray800,
    fourth: $gray700,
    reverse: white,
    accent: $purple500,
  ),
  border: (
    primary: $gray700,
    secondary: $gray900,
    tertiary: $gray400,
    accent: $purple500,
  ),
  icon: (
    primary: $gray50,
    secondary: $gray200,
    tertiary: $gray600,
    inactive: $gray500,
    reverse: $gray950,
  ),
  shadow: (
    primary: black,
  ),
);

$elementColorsDark: (
  'button-text': (
    primary: icon-color('primary', $semanticColorsDark),
    secondary: text-color('inactive', $semanticColorsDark),
  ),
  'button-background': (
    primary: background-color('accent', $semanticColorsDark),
    secondary: background-color('secondary', $semanticColorsDark),
    'secondary-hover': background-color('tertiary', $semanticColorsDark),
  ),
  'button-border': (
    secondary: border-color('primary', $semanticColorsDark),
  ),
  'backdrop-background': (
    primary: color.adjust(background-color('primary', $semanticColorsDark), $alpha: -0.3),
  ),
  'chat-button-border': (
    gradientOne: transparent,
    gradientTwo: transparent,
    gradientThree: border-color('accent', $semanticColorsDark),
    gradientFour: border-color('accent', $semanticColorsDark),
    gradientFive: transparent,
    gradientSix: transparent,
  ),
  'chat-button-background': (
    gradientOne: background-color('accent', $semanticColorsDark),
    gradientTwo: transparent,
  ),
);

$palette: map.merge($semanticColors, $elementColors);
$paletteDark: map.merge($semanticColorsDark, $elementColorsDark);
